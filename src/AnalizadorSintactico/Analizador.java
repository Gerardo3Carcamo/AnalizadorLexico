/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package AnalizadorSintactico;

import java.util.HashMap;
import java.util.Stack;

/**
 *
 * @author CHAVEZG
 */
public class Analizador {

    HashMap<Integer, Integer> terminalsMap = new HashMap<>();
    HashMap<String, Integer> nonTerminalsMap = new HashMap<>();
    public HashMap<Integer, String> terminalTokens = new HashMap<>();
    private Gramatica gramatica = new Gramatica();

    public void initMaps() {
        terminalTokens.put(1000, "identificador");
        terminalTokens.put(1001, "numero");
        terminalTokens.put(1002, "numero");
        terminalTokens.put(1026, "numero");
        terminalTokens.put(1028, "texto");
        terminalTokens.put(1004, "comentario");
        terminalTokens.put(1003, "/");
        terminalTokens.put(1005, "+");
        terminalTokens.put(1006, "++");
        terminalTokens.put(1007, ":");
        terminalTokens.put(1008, ":=");
        terminalTokens.put(1009, "-");
        terminalTokens.put(1010, "--");
        terminalTokens.put(1011, ">");
        terminalTokens.put(1012, ">=");
        terminalTokens.put(1013, "<");
        terminalTokens.put(1014, "<=");
        terminalTokens.put(1015, "#");
        terminalTokens.put(1016, "=");
        terminalTokens.put(1017, "*");
        terminalTokens.put(1018, ";");
        terminalTokens.put(1019, ",");
        terminalTokens.put(1020, "[");
        terminalTokens.put(1021, "]");
        terminalTokens.put(1022, "(");
        terminalTokens.put(1023, ")");
        terminalTokens.put(1024, "{");
        terminalTokens.put(1025, "}");
        terminalTokens.put(2001, "int");
        terminalTokens.put(2002, "include");
        terminalTokens.put(2003, "float");
        terminalTokens.put(2004, "double");
        terminalTokens.put(2005, "string");
        terminalTokens.put(2006, "char");
        terminalTokens.put(2007, "function");
        terminalTokens.put(2008, "return");
        terminalTokens.put(2009, "call");
        terminalTokens.put(2010, "if");
        terminalTokens.put(2011, "elif");
        terminalTokens.put(2012, "else");
        terminalTokens.put(2013, "while");
        terminalTokens.put(2014, "for");
        terminalTokens.put(2015, "do");
        terminalTokens.put(2016, "and");
        terminalTokens.put(2017, "or");
        terminalTokens.put(2018, "abs");
        terminalTokens.put(2019, "sqr");
        terminalTokens.put(2020, "sqrt");
        terminalTokens.put(2021, "sin");
        terminalTokens.put(2022, "sinh");
        terminalTokens.put(2023, "cosh");
        terminalTokens.put(2024, "cos");
        terminalTokens.put(2025, "tang");
        terminalTokens.put(2026, "tanh");
        terminalTokens.put(2027, "atang");
        terminalTokens.put(2028, "asin");
        terminalTokens.put(2029, "acos");
        terminalTokens.put(2030, "log");
        terminalTokens.put(2031, "exponential");
        terminalTokens.put(2032, "chr");
        terminalTokens.put(2033, "length");
        terminalTokens.put(2034, "printf");
        terminalTokens.put(2035, "scanf");
        terminalTokens.put(2036, "pow");
        terminalTokens.put(2037, "cbrt");
        terminalTokens.put(2038, "fact");
        terminalTokens.put(2039, "round");
        terminalTokens.put(2040, "trunc");
        terminalTokens.put(2041, "minimal");
        terminalTokens.put(2042, "maximal");
        terminalTokens.put(2043, "floor");
        terminalTokens.put(2044, "variables");

        terminalsMap.put(1015, 1);
        terminalsMap.put(2002, 2);
        terminalsMap.put(1000, 3);
        terminalsMap.put(1008, 4);
        terminalsMap.put(1018, 5);
        terminalsMap.put(2001, 6);
        terminalsMap.put(2003, 7);
        terminalsMap.put(2004, 8);
        terminalsMap.put(2005, 9);
        terminalsMap.put(2006, 10);
        terminalsMap.put(1020, 11);
        terminalsMap.put(1002, 12);
        terminalsMap.put(1001, 12);
        terminalsMap.put(1021, 13);
        terminalsMap.put(2007, 14);
        terminalsMap.put(1022, 15);
        terminalsMap.put(1023, 16);
        terminalsMap.put(1024, 17);
        terminalsMap.put(1025, 18);
        terminalsMap.put(2009, 19);
        terminalsMap.put(2018, 20);
        terminalsMap.put(2019, 21);
        terminalsMap.put(2020, 22);
        terminalsMap.put(2021, 23);
        terminalsMap.put(2022, 24);
        terminalsMap.put(2023, 25);
        terminalsMap.put(2024, 26);
        terminalsMap.put(2025, 27);
        terminalsMap.put(2027, 28);
        terminalsMap.put(2028, 29);
        terminalsMap.put(2029, 30);
        terminalsMap.put(2030, 31);
        terminalsMap.put(2031, 32);
        terminalsMap.put(2032, 33);
        terminalsMap.put(2033, 34);
        terminalsMap.put(2034, 35);
        terminalsMap.put(2035, 36);
        terminalsMap.put(2036, 37);
        terminalsMap.put(2037, 38);
        terminalsMap.put(2038, 39);
        terminalsMap.put(2039, 40);
        terminalsMap.put(2040, 41);
        terminalsMap.put(2041, 42);
        terminalsMap.put(2042, 43);
        terminalsMap.put(2043, 44);
        terminalsMap.put(1028, 45);
        terminalsMap.put(2010, 46);
        terminalsMap.put(2011, 47);
        terminalsMap.put(2012, 48);
        terminalsMap.put(2013, 49);
        terminalsMap.put(2014, 50);
        terminalsMap.put(2015, 51);
        terminalsMap.put(1006, 52);
        terminalsMap.put(1010, 53);
        terminalsMap.put(2016, 54);
        terminalsMap.put(2017, 55);
        terminalsMap.put(1011, 56);
        terminalsMap.put(1013, 57);
        terminalsMap.put(1012, 58);
        terminalsMap.put(1014, 59);
        terminalsMap.put(1016, 60);
        terminalsMap.put(1019, 61);
        terminalsMap.put(2008, 62);
        terminalsMap.put(1003, 63);
        terminalsMap.put(1017, 64);
        terminalsMap.put(1005, 65);
        terminalsMap.put(1009, 66);
        terminalsMap.put(1007, 67);
        terminalsMap.put(2044, 68);
        terminalsMap.put(1026, 12);

        nonTerminalsMap.put("P", 0); // "P", 0
        nonTerminalsMap.put("INCLUDE", 1); // "INCLUDE", 1
        nonTerminalsMap.put("CONSTANTES", 2); // "CONSTANTES", 2
        nonTerminalsMap.put("VARIABLES", 3); // "VARIABLES", 3
        nonTerminalsMap.put("FUNCION", 4); // "FUNCION", 4
        nonTerminalsMap.put("MAIN", 5); // "MAIN", 5
        nonTerminalsMap.put("VARIABLES_PRIMA", 6); // "VARIABLES_PRIMA", 6
        nonTerminalsMap.put("LISTA_VARIABLES", 7); // "LISTA_VARIABLES", 7
        nonTerminalsMap.put("LISTA_VARIABLES_PRIMA", 8); // "LISTA_VARIABLES_PRIMA", 8
        nonTerminalsMap.put("TIPO", 9); // "TIPO", 9
        nonTerminalsMap.put("DIMENSION", 10); // "DIMENSION", 10
        nonTerminalsMap.put("PROCEDURE'", 11); // "PROCEDURE'", 11
        nonTerminalsMap.put("PARAMETROS", 12); // "PARAMETROS", 12
        nonTerminalsMap.put("RETURN", 13); // "RETURN", 13
        nonTerminalsMap.put("BLOQUE", 14); // "BLOQUE", 14
        nonTerminalsMap.put("ESTATUTOS", 15); // "ESTATUTOS", 15
        nonTerminalsMap.put("ESTATUTO", 16); // "ESTATUTO", 16
        nonTerminalsMap.put("ASIGNACION", 17); // "ASIGNACION", 17
        nonTerminalsMap.put("CALL_FUNCTION", 18); // "CALL_FUNCTION", 18
        nonTerminalsMap.put("BUILD_IN_FUNCTIONS", 19); // "BUILD_IN_FUNCTIONS", 19
        nonTerminalsMap.put("IMPRESION", 20); // "IMPRESION", 20
        nonTerminalsMap.put("IMPRESION_PRIMA", 21); // "IMPRESION_PRIMA", 21
        nonTerminalsMap.put("LISTA", 22); // "LISTA", 22
        nonTerminalsMap.put("LISTA_ELEMENTO", 23); // "LISTA_ELEMENTO", 23
        nonTerminalsMap.put("LISTA_ELEMENTO_PRIMA", 24); // "LISTA_ELEMENTO_PRIMA", 24
        nonTerminalsMap.put("IF", 25); // "IF", 25
        nonTerminalsMap.put("ELIF", 26); // "ELIF", 26
        nonTerminalsMap.put("WHILE", 27); // "WHILE", 27
        nonTerminalsMap.put("FOR", 28); // "FOR", 28
        nonTerminalsMap.put("DO", 29); // "DO", 29
        nonTerminalsMap.put("SIGNO", 30); // "SIGNO", 30
        nonTerminalsMap.put("EXP_BOOLEANA", 31); // "EXP_BOOLEANA", 31
        nonTerminalsMap.put("EXPB'", 32); // "EXPB'", 32
        nonTerminalsMap.put("TERMB", 33); // "TERMB", 33
        nonTerminalsMap.put("TERMB'", 34); // "TERMB'", 34
        nonTerminalsMap.put("EXP", 35); // "EXP", 35
        nonTerminalsMap.put("EXP'", 36); // "EXP'", 36
        nonTerminalsMap.put("TERM", 37); // "TERM", 37
        nonTerminalsMap.put("TERM'", 38); // "TERM'", 38
        nonTerminalsMap.put("FACTOR", 39); // "FACTOR", 39
        nonTerminalsMap.put("FUNCT", 40); // "FUNCT", 40
        nonTerminalsMap.put("OPER", 41); // "OPER", 41

    }

    public int getCol(int state) throws SintaxisException {
        try {
            return terminalsMap.get(state) - 1;
        } catch (Exception ex) {
            throw new SintaxisException();
        }
    }

    public int getRow(String state)throws SintaxisException {
        try{
            return nonTerminalsMap.get(state);
        }catch(Exception ex){
            throw new SintaxisException();
        }
    }

    public String[][] matriz = {
        {"1", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"2", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "3", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "4",},
        {"500", "500", "5", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "18", "18", "18", "18", "18", "500", "500", "500", "500", "500", "500", "19", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "25", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "6", "7", "7", "7", "7", "7", "500", "500", "500", "500", "500", "7", "7", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "8", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "9", "500", "500", "500", "500", "500", "10", "500",},
        {"500", "500", "500", "500", "500", "11", "12", "13", "14", "15", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "17", "17", "17", "17", "17", "17", "16", "500", "500", "17", "500", "17", "17", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "18", "12", "13", "14", "15", "500", "500", "500", "500", "500", "500", "19", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "5", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "23", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "24", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "26", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "27", "500", "500", "500", "27", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "28", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "27", "500", "27", "500", "500", "27", "27", "27", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "29", "500", "500", "500", "52", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "30", "35", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "500", "32", "500", "500", "31", "33", "34", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "36", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "37", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "52", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "64", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "65", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "67", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "66", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "68", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "69", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "71", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "70", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "71", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "75", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "73", "74", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "75", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "77", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "78", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "79", "80", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "85", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "97", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "84", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "84", "84", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "82", "83", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "85", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "97", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "87", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "87", "87", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "87", "87", "86", "101", "102", "103", "104", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "92", "500", "500", "500", "500", "500", "500", "500", "500", "105", "500", "500", "97", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "91", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "91", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "91", "91", "91", "91", "91", "91", "500", "500", "500", "89", "90", "500", "91",},
        {"500", "500", "92", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "97", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "500", "500", "95", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "95", "95", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "95", "95", "95", "95", "95", "95", "95", "95", "500", "94", "93", "95", "95", "500", "95",},
        {"500", "500", "95", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "97", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500",},
        {"500", "500", "99", "500", "99", "500", "500", "500", "500", "500", "500", "500", "500", "500", "98", "99", "99", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "99", "99", "99", "99", "99", "99", "99", "99", "500", "99", "99", "99", "99", "500", "99",},
        {"500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "500", "100", "101", "102", "103", "104", "500", "500", "500", "500", "500", "500", "500", "500",},};

    public Stack<String> GetSymbols(Stack<String> stack, Stack<Integer> entrada) throws SintaxisException {
        try {
            int col = getCol(entrada.peek());
            int row = getRow(stack.peek());
            int produccion = Integer.parseInt(matriz[row][col]);
            if (produccion != 500) {
                stack.pop();
            } else {
                throw new SintaxisException();
            }
            gramatica.gramatica.forEach((nonTerminal, prod) -> {
                prod.getProduccion().forEach(x -> {
                    if (x.getLine() == produccion) {
                        String[] s = x.getSimbolos().split(" ");
                        for (int i = s.length - 1; i >= 0; i--) {
                            stack.push(s[i]);
                        }
                    }
                });
            });
            return stack;
        } catch (SintaxisException ex) {
            throw new SintaxisException();
        }
    }
}
